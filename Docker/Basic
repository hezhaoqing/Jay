docker官方文档：https://docs.docker.com/install/linux/docker-ce/centos/#install-from-a-package
docker官方rpm：https://download.docker.com/linux/centos/7/x86_64/stable/Packages/
docker官方仓库：https://hub.docker.com/


概念：
1.镜像(Image)
2.容器(Container)
3.仓库(Registry)


安装：
本次采用rpm方式，选择17.12版本
# wget https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-17.12.0.ce-1.el7.centos.x86_64.rpm
# yum install -y docker-ce-17.12.0.ce-1.el7.centos.x86_64.rpm
# systemctl start docker


常用命令：
# docker info                             ### 查看docker状态信息
# docker ps                               ### 查看正在运行的容器的列表
# docker ps -a                            ### 列出所有容器
# docker ps -a -q                         ### 列出所有容器的RQid
# docker ps -l                            ### 列出最后一次运行的容器

# docker search jenkins                   ### 查找镜像

# docker run -i -t ubuntu bash            ### 从镜像创建一个新容器并启动，-t分配伪终端并绑定到容器标准输入，-i容器标准输入保持打开，-d后台运行
# docker start RQid                       ### 启动一个停止的容器。同理有stop、restart。

# docker pull ubuntu:12.04                ### 拉取一个ubuntu镜像，相当于docker pull registry.hub.docker.com/ubuntu:12.04
# dokcer images                           ### 显示本地已有的所有镜像
# docker build -t my_image .              ### 制作1个镜像
        1）vim Dockerfile
        2）FROM ubuntu
        3）RUN
        4）CMD
# docker tag JXid my_image:latest         ### 为镜像打一个标签
# docker login --username=yourhubusername --email=yourmail@xxx.com
# docker push my_image:latest             ### 把制作的镜像推到docker仓库，前提是注册并创建仓库且登陆了docker仓库。

# docker rmi JXid                         ### 删除1个镜像，也可JXname. 注意：在删除1个镜像前必须要删除掉所有依赖于这个镜像的所有容器。
                                              docker rmi $(docker images -q -f "dangling=true")
# docker rm RQid                          ### 删除1个容器，删除一个运行中的容器需要加-f参数。
                                              docker rm $(docker ps -a -q)会删掉所有未运行的容器

# docker logs RQid                        ### 查看容器输出

# docker save -o ubuntu.tar ubuntu:12.04  ### 导出，把镜像保存为本地文件
# docker load --input ubuntu.tar          ### 导入，从文件导入一个镜像，另:# docker load < ubuntu.tar
# docker export RQid                      ### 导出，把容器保存为快照
# docker import RQKZ                      ### 导入，从快照导入为镜像。

# docker attach RQid                      ### 进入容器进行操作.前提是容器is running
# docker exec -it RQid whoami             ### 指定容器执行指定命令。前提同上

# docker inspect --format "{{.State.Pid}}" RQname
  JCnum                                   ### 获取容器的进程号
# nsenter --target 进程号 --mount --uts --ipc --net --pid
                                          ### 进入容器

# docker run -d -P --name my_nginx nginx  ### 大写P代表容器端口随机映射宿主机端口
# docker run -d -p 666:80 nginx           ### 小写p代表指定 宿主机端口：容器端口













