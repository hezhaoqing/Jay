示例1：
#!/usr/bin/env python
#coding:utf8

class Hotel(object):                                               ### 此处class Hotel():或者class Hotel:
    def __init__(self, room, cf=1.0, br=15):                       
        self.room = room
        self.cf = cf
        self.br = br

    def cacl_all(self, days=1):
        return (self.room * self.cf + self.br) * days

if __name__ == '__main__':
    stdroom = Hotel(200)
    big_room = Hotel(230, 0.9)
    print stdroom.cacl_all()                                       ### 215.0
    print stdroom.cacl_all(2)                                      ### 430.0
    print big_room.cacl_all()                                      ### 222.0
    print big_room.cacl_all(3)                                     ### 666.0
    
    
    







    
    
示例2：    
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# 父类
class FULEI(object):
    def __init__(self, name, phone):
        self.name = name
        self.phone = phone

    def get_phone(self):
        return self.phone
    
    def get_name(self):
        return self.name

# 子类，继承父类的所有方法
class ZILEI(FULEI):
    def __init__(self, nm, ph, email):
        # FULEI.__init__(self, nm, ph)                             # 调用父类方法一
        super(ZILEI, self).__init__(nm, ph)                        # 调用父类方法二
        self.email = email

    def get_email(self):
        return self.email

# 调用
if __name__ == "__main__":
    ### 父类调用
    HE = FULEI('zhoujielun', '15222222222')
    SHE = FULEI('kunling', '15888888888')

    print HE.get_phone()
    print FULEI.get_phone(SHE)

    ### 子类调用
    AYBCO = ZILEI('hathaway', '110', 'aiyoubucuoo@163.com')
    print AYBCO.get_email(), AYBCO.get_phone(), AYBCO.get_name()
    
    
    
    
    
    
    
    
    
    
    
    
示例3：    
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# 组合类
class INFO(object):
    def __init__(self, name, phone):
        self.name = name
        self.phone = phone

    def get_phone(self):
        return self.phone

    def update_phone(self,newphone):
        self.phone = newphone
        
    def get_name(self):
        return self.name
    
class ALL_INFO():
    def __init__(self,guojia,name,phone):
        self.guojia = guojia                                               ### ALL_INFO类独有的一个变量
        self.info = INFO(name,phone)                                       ### 此处直接调用了跟INFO类重复的变量，并引用了INFO的全部函数。

    def get_country(self):                                                 ### ALL_INFO类独有的一个函数
        return self.guojia

if __name__ == "__main__":
    HE = ALL_INFO('CHINA','zhoujielun', '15222222222')                     ### 注意下面ALL_INFO调用INFO的函数的方式,
    SHE = ALL_INFO('CHINA','kunling', '15888888888')

    print HE.info.get_phone()                                              ### 15222222222
    print SHE.info.get_name()                                              ### kunling
    
    HE.info.update_phone('666')                                            ### 更新phone
    print HE.info.get_phone()                                              ### 666
    
    print SHE.get_country()                                                ### CHINA
    
    
    
    
    
    
    
    
    
    
    
    
#!/usr/bin/env python
#coding:utf8

# 内置功能 表现形式： __xxx__
class  Number(object):
    def __init__(self, number):
        self.number = number

    def __add__(self, other):
        return self.number + other        

    def __radd__(self, other):
        return self.number  + other

    def __sub__(self, other):
        return self.number - other

    def __rsub__(self, other):
        return other - self.number

    def __gt__(self, other):
        if self.number > other:
            return True
        return False


if __name__ == '__main__':
    num = Number(10)
    print num + 20
    print 30 + num
    print num - 5
    print 11 - num
    print num > 20    
