#默认参数为可变对象时
def add_end(L=[]):
    L.append('END')
    return L
    
print(add_end())
print(add_end())
print(add_end())

#默认参数为不可变对象
def add_end(L=None):
    if L is None:
        L = []
    L.append('END')
    return L

print(add_end())
print(add_end())
print(add_end())

-----------------------------------------------------------------------------------------------

# L作为一个对象，有多种可进行的操作 称为方法

L=[]

L.append('H')
print(L)

L.append('Z')
L.append('Q')
print(L)
print(len(L))

L.remove('Q')
print(L)

L.pop(1)
print(L)

# 定义字典
channelOwnerName = {
    "69299" : "张三网络信息咨询有限公司",
    "5225" : "李四文化传播有限公司",
    "93338" : "安徽王五文化传媒有限公司",
    "5180820" : "河南兄弟文化传媒有限公司",
    "9865" : "上海广告有限公司",
    }

print(channelOwnerName['5225'])

-----------------------------------------------------------------------------------------------

#!/usr/bin/env python
import os
import time
import tarfile
import zipfile
'''
mysqldump
Usage: mysqldump [OPTIONS] database [tables]
OR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]
OR     mysqldump [OPTIONS] --all-databases [OPTIONS]
For more options, use mysqldump --help
'''
db_host         ="127.0.0.1"
db_user         ="root"
db_passwd       ="123456"
db_name         ="game_mix_"

BACKUP_DB_PATH = "/data/backup_db/"
db_backup_name = "%s/%s_%s.sql" % (BACKUP_DB_PATH, db_name, time.strftime("%Y%m%d_%H%M"))

zip_src = db_backup_name
zip_dest = zip_src + ".zip"

def zip_files():
    f = zipfile.ZipFile(zip_dest, 'w' ,zipfile.ZIP_DEFLATED)
    f.write(zip_src)
    f.close()

if __name__ == "__main__":
    if not os.path.exists(BACKUP_DB_PATH):
        os.makedirs(BACKUP_DB_PATH)
    #if

    os.system("mysqldump -h%s -u%s -p%s %s > %s" %(db_host, db_user, db_passwd, db_name, db_backup_name))


##############################################
import os
import time
import tarfile
import zipfile

BACKDIR= "/data/backup"

f=zipfile.ZipExtFile()

if __name__ == "__main__":
    if not os.path.exists(BACKDIR):
        os.mkdir(BACKDIR)

    os.system()


    time.localtime()

--------------------------------------------------------------------------------------------------------------------------

A='                                  dddxxxdddxxxddd'

print(A)
A=A.strip()

print(A)

def person(name, sex, age=30, **kw):
    print('name:', name, 'sex:', sex, 'age:', age, 'other:', kw)


person('hzq','man',age='28',city='anyang',country='china')


def func(a,b,c=2,*d,**e):
    print(a)
    print(b)
    print(c)
    print(d)
    print(e)

func(1,2,8,1,0,7,name='hzq',age=30)



def person(name, age, *, city, job):
    print(name,age,city,job)

person('hzq',30,city='ay',job='yw')


def ex(val,list=[]):
    list.append(val)
    return list

list1 = ex(10)
list2 =ex(123,[])
list3 =ex('a')

print(list1)  # [10]
print(list2)  # [123]
print(list3)  # [123,a]

-------------------------------------------------------------------------------------------------------------------------

class student():
def __init__(self,name,age):
        self.name=name
        self.age=age
    def print_info(self):
        print("%s:%s" % (self.name,self.age))
    def set_info(self,aaggee):
        self.age=aaggee

first = student("hzq",30)
print(first.age)

first.set_info(18)
print(first.age)

print(getattr(first,"name"))
getattr(first,"set_info")(28)
print(first.age)

getattr(first,"print_info")()


print(hasattr(first,"age"))

print(hasattr(first,"set_info"))


setattr(first,'job','yw')
print(first.job)
print(dir(first))

--------------------------------------------------------------------------------------------------------------

from enum import Enum, unique
@unique
class Gender(Enum):
    Male = 0
    Female = 1

class Student(object):
    def __init__(self, name, gender):
        self.name = name
        if isinstance(gender,Gender):
            self.gender = gender
        else:
            raise ValueError('只允许接收Gender类型的参数')

bart = Student('Bart', Gender(Gender.Male.value))
if bart.gender == Gender.Male:
    print('测试通过!')
else:
    print('测试失败!')


class Chain(object):
    def __init__(self, path=''):
        self._path = path
    def __getattr__(self, path):
        return Chain('%s/%s' % (self._path, path))
    def __str__(self):
        return self._path
    def __call__(self, *args, **kwargs):
        print('so lo.')
    __repr__ = __str__

print(Chain('http://wwww.baidu.com').xxx)
print(Chain('http://wwww.baidu.com').xxx.yyyy)
print(Chain('http://wwww.baidu.com').xxx.yyyy.zzz)
j=Chain()
j()

----------------------------------------------------------------------------------------------------------------

def foo(s):
    n = int(s)
    print('>>> n = %s' % n)
    return 10 / n

def main(s):
    foo(s)
    print(foo(s))
main(5)

--------------------------------------------------------------------------------------------------------------------

import time

print(time.strftime("%Y-%m-%d %H:%M:%S"))

print(time.strptime('2018-07-16 11:05:26',"%Y-%m-%d %H:%M:%S"))
#print(time.localtime(0))
print(time.time())
print(time.localtime(0))
print(time.localtime(time.time()))
print(time.gmtime(0))
print(time.gmtime(time.time()))

-----------------------------------------------------------------------------------------------------------------------

#!/usr/bin/env python
# -*- coding:utf-8 -*-
import getpass

name = 'tom'
pwd = '123456'
count = 0

while True:
    if count < 3:
        print("Please enter your name and password !")
        username = input("username:")
        password = getpass.getpass("password:")

        if username == name and password == pwd:
            print("恭喜你登陆成功！")
            break
        else:
            print("登陆失败！用户名或者密码错误")
    else:
        print("你已经输错3次,正在退出....")
        break

    count += 1

---------------------------------------------------------------------------------------------------------------------------

#!/usr/bin/env python
# -*- coding:utf-8 -*-



keys = [1,2,3,4,5,6,7]
values = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat']

D = {}
for (k,v) in zip(keys,values):
    D[k] = v
print(D)

import socket

s=socket.socket()
result=s.connect_ex()
